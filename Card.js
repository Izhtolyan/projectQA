<?php
// Создаем массив с цветами карт
$colors = array("R", "G", "B", "W");
// Создаем массив с достоинствами карт
$values = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
// Создаем пустой массив для хранения колоды карт
$deck = array();
// Заполняем колоду карт всеми возможными комбинациями цветов и достоинств
foreach ($colors as $color) {
    foreach ($values as $value) {
        $deck[] = $color . $value;
    }
}
// Создаем пустой массив для хранения игроков и их карт
$players = array();
// Функция для раздачи N случайных карт C игрокам
function start($N, $C) {
    global $deck; // Используем глобальную переменную колоды карт
    global $players; // Используем глобальную переменную игроков и их карт
    // Проверяем корректность входных данных
    if (!is_int($N) || !is_int($C) || $N <= 0 || $C <= 0) {
        echo "Неверные параметры команды start\n";
        return;
    }
    if ($N * $C > count($deck)) {
        echo "Недостаточно карт в колоде\n";
        return;
    }
    // Очищаем массив игроков и их карт от предыдущей раздачи
    $players = array();
    // Перемешиваем колоду карт случайным образом
    shuffle($deck);
    // Раздаем N случайных карт C игрокам по очереди
    for ($i = 0; $i < $C; $i++) {
        // Создаем пустой массив для хранения карт текущего игрока
        $player_cards = array();
        for ($j = 0; $j < $N; $j++) {
            // Добавляем первую карту из колоды в массив карт текущего игрока
            $player_cards[] = array_shift($deck);
        }
        // Добавляем текущего игрока и его карты в массив игроков и их карт 
        // Используем индексацию с единицы для удобства пользователя 
        $players[$i + 1] = $player_cards;
    }
}
// Функция для вывода списка карт заданного игрока 
function get_cards($C) {
    global $players; // Используем глобальную переменную игроков и их карт 
    // Проверяем корректность входных данных 
    if (!is_int($C) || !isset($players[$C])) {
        echo "Неверный параметр команды get-cards\n";
        return;
    }
 // Выводим номер игрока и список его карт через пробел 
    echo $C . " " . implode(" ", $players[$C]) . "\n";
}
// Функция для обработки консольных команд 
function handle_command($command) {
    // Разбиваем команду на слова по пробелам 
    $words = explode(" ", $command);
    // Проверяем первое слово команды 
    switch ($words[0]) {
        case "start":
            // Проверяем количество слов в команде 
            if (count($words) != 3) {
                echo "Неверный формат команды start\n";
                return;
            }
            // Преобразуем второе и третье слова в целые числа 
            $N = intval($words[1]);
            $C = intval($words[2]);
            // Вызываем функцию для раздачи карт 
            start($N, $C);
            break;
        case "get-cards":
            // Проверяем количество слов в команде 
            if (count($words) != 2) {
                echo "Неверный формат команды get-cards\n";
                return;
            }
            // Преобразуем второе слово в целое число 
            $C = intval($words[1]);
            // Вызываем функцию для вывода списка карт заданного игрока
 get_cards($C);
            break;
        default:
            // Неизвестная команда 
            echo "Неверная команда\n";
    }
}
// Читаем консольный ввод построчно 
while ($line = fgets(STDIN)) {
    // Удаляем символ перевода строки из ввода 
    $line = trim($line);
    // Обрабатываем введенную команду 
    handle_command($line);
}
?>
